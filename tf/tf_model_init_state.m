
conn = get_conn();

industry_sic_code_index = Index(get_single_sql_result(conn, 'SELECT max(industry_sic_code) FROM company_tf_observation_orig'));

%city_index = Index(get_single_sql_result(conn, ...
    %'SELECT max(city) FROM company_tf_observation_orig'));

state_index = Index(get_single_sql_result(conn, 'SELECT max(state) FROM company_tf_observation_orig'));

%county_index = Index(get_single_sql_result(conn, ...
%    'SELECT max(county) FROM company_tf_observation_orig'));

%number_of_employees_index = Index(get_single_sql_result(conn, ...
%    'SELECT max(number_of_employees) FROM company_tf_observation_orig'));

%credit_score_index = Index(get_single_sql_result(conn, ...
%    'SELECT max(credit_score) FROM company_tf_observation_orig'));

%business_risk_index = Index(get_single_sql_result(conn, ...
%    'SELECT max(business_risk) FROM company_tf_observation_orig'));

topic_index = Index(10);

sql_cmd = [ 'SELECT ' ...
            ' industry_sic_code, state, ' ...
            ' cast(yearly_sales as numeric) '...
            ' FROM company_tf_observation_orig ' ...
            ' WHERE ' ...
            ' industry_sic_code IS NOT NULL AND ' ...
            ' state IS NOT NULL AND ' ...
            ' yearly_sales IS NOT NULL ' ...
            ' LIMIT 100000 ' ];

sql_data = select(conn, sql_cmd);

% IMPORTANT: number_of_employees, yearly_sales are 0 indexed on db
%            MATLAB should pre/post filter results as 1 indexed

yearly_sales_X = Tensor(industry_sic_code_index, state_index); %, city_index); %, county_index);
% yearly sales model
yearly_sales_X.data = ones(...
    industry_sic_code_index.cardinality, ...
    state_index.cardinality ...
    )*eps*1000;

% X_hat = Tensor(industry_sic_code_index, state_index); % used for prediction
% X_hat.data = zeros(industry_sic_code_index.cardinality, ...
%                    state_index.cardinality ...
%                    )*eps*1000; 

for r_ind = 1:size(sql_data,1)
    if isnan(sql_data{r_ind, end}) == 0
        yearly_sales_X.data( ...
            sql_data{r_ind, {'industry_sic_code'}}, ...
            sql_data{r_ind, {'state'}} ...
            ) = sql_data{r_ind, {'yearly_sales'}}+1;
    end
end

A = Tensor(industry_sic_code_index, topic_index);
B = Tensor(state_index, topic_index);

A.data = rand(industry_sic_code_index.cardinality, topic_index.cardinality);
B.data = rand(state_index.cardinality, topic_index.cardinality);
